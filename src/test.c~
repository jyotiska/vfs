#include "../include/create_vfs.h"
#include "../include/vfs_main.h"
#include<stdlib.h>
#include<string.h>
#include<stdio.h>

int main(int argc,const char** argv)
{
	FILE *fp ;
	char line[100];
	char new[3][20];
	int i=0;
	long size;
	int writecheck;
	int createvfscheck,mountcheck;
	int readfile;
	char* vfsname;

	fp = fopen(argv[1],"r") ;
	if(fp==NULL)
        {
               	printf("Cannot open file");
		exit(0);
        }
	fgets(line,100,fp);
	

	char * pch;
  	pch = strtok (line," ");

  	i=0;
	while (pch != NULL)
  	{
    		strcpy(new[i],pch);
		//printf("\n%s",new[i]);
		i++;
    		pch = strtok (NULL, " ");
	
  	}
	
	size=atol(new[2]);
	//printf("%lu",size);

	createvfscheck = create_vfs(new[1],size);
	vfsname=new[1];

	if(createvfscheck==1)
	{
		printf("\nVFS Successfully created");	
	}
	else
	{
		printf("\nVFS NOT Created");
		exit(0);
	}
        
	/*(

	fgets(line,100,fp);
  	pch = strtok (line," ");

  	i=0;
	while (pch != NULL)
  	{
    		strcpy(new[i],pch);
		//printf("\n%s",new[i]);
		i++;
    		pch = strtok (NULL, " ");
	
  	}
	printf("\n%s %ld",new[1],size);
       // size=atol(new[2]);
        mountcheck=mount(new[1],size);
        if(mountcheck==1)
	{
		printf("\nVFS Successfully mounted");	
	}
	else
	{
		printf("\nVFS NOT mounted");
		exit(0);
	}
*/
	fgets(line,100,fp);
	

	//char * pch;
  	pch = strtok (line," ");

  	i=0;
	while (pch != NULL)
  	{
    		strcpy(new[i],pch);
		//printf("\n%s",new[i]);
		i++;
    		pch = strtok (NULL, " ");
	
  	}
	
	//size=atol(new[2]);
	//printf("%lu",size);

	long filestartpos = sizeof(struct main_header)+((size)/sizeof(struct block))*sizeof(struct file_descriptor)+sizeof(int)*(size)/sizeof(struct block);
	printf("\n%ld\n",filestartpos);

	writecheck=write(vfsname,new[1],filestartpos);
	if(writecheck>0)
	{
		printf("\nFile Successfully written");	
	}
	else
	{
		printf("\nCannot write in file");
		exit(0);
	}

	readfile=read(vfsname,new[1],filestartpos);
	if(readfile>0)
	{
		printf("\nFile Successfully read");	
	}
	else
	{
		printf("\nCannot read from file");
		exit(0);
	}
}
